// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Auth {
  id                   Int           @id @default(autoincrement())
  email                String        @unique
  password             String
  username             String?       @unique // Add username field
  phoneNumber          String?       @unique // Add phone number field
  role                 Role
  resetPasswordToken   String?
  resetPasswordExpires BigInt?
  Profile              Profile?
  Submissions          Submissions[]
}

model Profile {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  firstName String? // First name from signup form
  lastName  String? // Last name from signup form
  bio       String?
  avatar    String? // Optional field for a profile picture URL

  user Auth @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model Submissions {
  id        Int       @id @default(autoincrement())
  userId    Int // Foreign key to Auth model
  status    String?   @default("pending") // pending, processing, success, failure
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      Auth      @relation(fields: [userId], references: [id])
  turnitin  Turnitin?
}

model Turnitin {
  id                          Int         @id @default(autoincrement())
  minioId                     String? // Unique ID for the file in Minio
  processSettings             Json?
  turnitinSubmissionId        BigInt? // Unique ID for the submission in Turnitin.com
  wordCount                   String?
  isPlagiarismReportAvailable Boolean?    @default(false)
  similarity                  String?
  plagiarismReportMinio       String?
  isAiReportAvailable         Boolean?    @default(false)
  aiPlag                      String?
  aiPlagReportMinio           String?
  pageCount                   String?
  aiReportStatus              String?
  isAiReportError             Boolean?    @default(false)
  aiReportErrorCode           String?
  aiReportErrorMessage        String?
  submissionId                Int         @unique // Foreign key to Submissions model
  submission                  Submissions @relation(fields: [submissionId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  EMPLOYEE
  USER
}
